!function(e,n){"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?module.exports=n():n()}(this,function(){return angular.module("fnSimpleDragDrop",[]).directive("fnDragOver",function(){"use strict";return{restrict:"A",require:"^fnDrop",link:function(e,n,r,t){var a=n[0].addEventListener.bind(n[0]);a("dragover",function(){t.over(e.$eval(r.fnDragOver))}),a("dragleave",function(){t.leave(e.$eval(r.fnDragOver))})}}}).directive("fnDrag",["$rootScope",function(e){"use strict";return function(n,r,t){function a(a){i.data=n.$eval(t.fnDrag),i.source=n.$eval(t.fnSource),a.dataTransfer.effectAllowed="move",a.dataTransfer.setDragImage(r[0],0,0),e.$emit("fn-dragstart",i)}function o(){e.$emit("fn-dragend",i)}r.attr("draggable",!0);var f=r[0].addEventListener.bind(r[0]),i={element:r};f("dragstart",a),f("dragend",o)}}]).directive("fnDrop",["$rootScope",function(e){"use strict";var n,r=null;return e.$on("fn-dragstart",function(e,r){n=r,angular.element(r.element).addClass("fn-dragging")}),e.$on("fn-dragend",function(e,r){n=null,angular.element(r.element).removeClass("fn-dragging")}),{restrict:"A",link:function(e,t,a,o){var f=0,i=t[0].addEventListener.bind(t[0]);i("dragover",function(e){e.stopPropagation(),e.preventDefault(),e.dataTransfer.dropEffect="move"}),i("dragenter",function(e){f++,e.stopPropagation(),e.preventDefault(),t.addClass("fn-over")}),i("dragleave",function(e){f--,e.stopPropagation(),e.preventDefault(),0===f&&t.removeClass("fn-over")}),i("drop",function(o){f=0,o.preventDefault(),t.removeClass("fn-over"),e.$apply(function(){e.$eval(a.fnDrop,{$over:r,$data:n.data,$source:n.source,$target:e.$eval(a.fnTarget)})})})},controller:["$scope",function(e){this.over=function(e){r=e},this.leave=function(e){r=null}}]}}])});